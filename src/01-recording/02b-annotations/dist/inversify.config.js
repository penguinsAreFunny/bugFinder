"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = void 0;
var bugfinder_framework_1 = require("bugfinder-framework");
var bugfinder_commitpath_db_mongodb_1 = require("bugfinder-commitpath-db-mongodb");
var bugfinder_commitpath_annotator_commitmsg_1 = require("bugfinder-commitpath-annotator-commitmsg");
var bugfinder_framework_defaultcontainer_1 = require("bugfinder-framework-defaultcontainer");
var bugfinder_commitpath_annotator_commitmsgwindow_1 = require("bugfinder-commitpath-annotator-commitmsgwindow");
var container = bugfinder_framework_defaultcontainer_1.annotatorContainer;
exports.container = container;
var mongoDBConfig = {
    url: "mongodb://localhost:27017",
    dbName: "TypeScript_v2"
};
var testFileMatcher = /(test?\/.*\.*)/;
var logOptions = {
    debugToConsole: true,
    errorToConsole: true,
    infoToConsole: true,
    traceToConsole: true,
    warnToConsole: true,
    logFile: "./log.txt",
};
// binding Annotator and its dependencies
container.bind(bugfinder_framework_1.ANNOTATOR_TYPES.annotator).to(bugfinder_commitpath_annotator_commitmsgwindow_1.CommitPathsWindowAnnotator);
container.bind(bugfinder_commitpath_annotator_commitmsgwindow_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSGWINDOW_TYPES.nPre).toConstantValue(0);
container.bind(bugfinder_commitpath_annotator_commitmsgwindow_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSGWINDOW_TYPES.nPost).toConstantValue(3);
container.bind(bugfinder_commitpath_annotator_commitmsgwindow_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSGWINDOW_TYPES.upToN).toConstantValue(true);
container.bind(bugfinder_commitpath_annotator_commitmsgwindow_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSGWINDOW_TYPES.useCurrent).toConstantValue(false);
container.bind(bugfinder_commitpath_annotator_commitmsgwindow_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSGWINDOW_TYPES.uniqueModePre)
    .toConstantValue(false);
container.bind(bugfinder_commitpath_annotator_commitmsgwindow_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSGWINDOW_TYPES.uniqueModePost)
    .toConstantValue(false);
container.bind(bugfinder_commitpath_annotator_commitmsgwindow_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSGWINDOW_TYPES.commitPathAnnotator).to(bugfinder_commitpath_annotator_commitmsg_1.CommitPathsAnnotator);
container.bind(bugfinder_commitpath_annotator_commitmsg_1.BUGFINDER_COMMITPATH_ANNOTATOR_COMMITMSG_TYPES.testFileMatcher).toConstantValue(testFileMatcher);
// binding DB and its dependencies
container.bind(bugfinder_framework_1.ANNOTATOR_TYPES.db).to(bugfinder_commitpath_db_mongodb_1.CommitPathsMongoDB);
container.bind(bugfinder_commitpath_db_mongodb_1.BUGFINDER_DB_COMMITPATH_MONGODB_TYPES.mongoDBConfig).toConstantValue(mongoDBConfig);
// binding AnnotationFactory
container.bind(bugfinder_framework_1.ANNOTATOR_TYPES.annotationFactory).to(bugfinder_framework_1.AnnotationFactory);
// binding Logger
container.bind(bugfinder_framework_1.SHARED_TYPES.logger).to(bugfinder_framework_1.FileAndConsoleLogger);
container.bind(bugfinder_framework_1.SHARED_TYPES.logConfig).toConstantValue(logOptions);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52ZXJzaWZ5LmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL2ludmVyc2lmeS5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkRBSzZCO0FBRTdCLG1GQUF5SDtBQUN6SCxxR0FFa0Q7QUFDbEQsNkZBQXdFO0FBR3hFLGlIQUd3RDtBQUV4RCxJQUFNLFNBQVMsR0FBYyx5REFBa0IsQ0FBQztBQXdDeEMsOEJBQVM7QUF2Q2pCLElBQU0sYUFBYSxHQUFrQjtJQUNqQyxHQUFHLEVBQUUsMkJBQTJCO0lBQ2hDLE1BQU0sRUFBRSxlQUFlO0NBQzFCLENBQUE7QUFDRCxJQUFNLGVBQWUsR0FBRyxnQkFBZ0IsQ0FBQTtBQUN4QyxJQUFNLFVBQVUsR0FBYztJQUMxQixjQUFjLEVBQUUsSUFBSTtJQUNwQixjQUFjLEVBQUUsSUFBSTtJQUNwQixhQUFhLEVBQUUsSUFBSTtJQUNuQixjQUFjLEVBQUUsSUFBSTtJQUNwQixhQUFhLEVBQUUsSUFBSTtJQUNuQixPQUFPLEVBQUUsV0FBVztDQUN2QixDQUFBO0FBRUQseUNBQXlDO0FBQ3pDLFNBQVMsQ0FBQyxJQUFJLENBQWdDLHFDQUFlLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLDJFQUEwQixDQUFDLENBQUE7QUFDdkcsU0FBUyxDQUFDLElBQUksQ0FBUyxxR0FBb0QsQ0FBQyxJQUFJLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDcEcsU0FBUyxDQUFDLElBQUksQ0FBUyxxR0FBb0QsQ0FBQyxLQUFLLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDckcsU0FBUyxDQUFDLElBQUksQ0FBVSxxR0FBb0QsQ0FBQyxLQUFLLENBQUMsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDekcsU0FBUyxDQUFDLElBQUksQ0FBVSxxR0FBb0QsQ0FBQyxVQUFVLENBQUMsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUE7QUFDL0csU0FBUyxDQUFDLElBQUksQ0FBVSxxR0FBb0QsQ0FBQyxhQUFhLENBQUM7S0FDdEYsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFBO0FBQzNCLFNBQVMsQ0FBQyxJQUFJLENBQVUscUdBQW9ELENBQUMsY0FBYyxDQUFDO0tBQ3ZGLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQTtBQUMzQixTQUFTLENBQUMsSUFBSSxDQUNWLHFHQUFvRCxDQUFDLG1CQUFtQixDQUFDLENBQUMsRUFBRSxDQUFDLCtEQUFvQixDQUFDLENBQUE7QUFDdEcsU0FBUyxDQUFDLElBQUksQ0FBUyx5RkFBOEMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxlQUFlLENBQUMsZUFBZSxDQUFDLENBQUE7QUFFdkgsa0NBQWtDO0FBQ2xDLFNBQVMsQ0FBQyxJQUFJLENBQThCLHFDQUFlLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLG9EQUFrQixDQUFDLENBQUE7QUFDdEYsU0FBUyxDQUFDLElBQUksQ0FBZ0IsdUVBQXFDLENBQUMsYUFBYSxDQUFDLENBQUMsZUFBZSxDQUFDLGFBQWEsQ0FBQyxDQUFBO0FBRWpILDRCQUE0QjtBQUM1QixTQUFTLENBQUMsSUFBSSxDQUF3QyxxQ0FBZSxDQUFDLGlCQUFpQixDQUFDLENBQUMsRUFBRSxDQUFDLHVDQUFpQixDQUFDLENBQUE7QUFFOUcsaUJBQWlCO0FBQ2pCLFNBQVMsQ0FBQyxJQUFJLENBQVMsa0NBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsMENBQW9CLENBQUMsQ0FBQTtBQUNwRSxTQUFTLENBQUMsSUFBSSxDQUFZLGtDQUFZLENBQUMsU0FBUyxDQUFDLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFBIn0=